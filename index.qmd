---
title: "renv demo"
author: "Maëlle Salmon"
format:
  revealjs:  
    auto-stretch: false
    hash-type: number
    slide-number: true
    controls: auto
    from: markdown+emoji
    theme: [custom.scss]
    include-after-body: bla.html
    menu:
      width: full
---

## Goals for today

```{r}
#| echo: false
get_pic <- function(id, alt, width) {
  
  info <- httr::GET(
    paste0("https://api.pexels.com/v1/photos/", id),
    httr::add_headers(Authorization = Sys.getenv("PEXELS_KEY"))
  ) |>
    httr::content()
  download.file(info$src$large, paste0(id, ".jpeg"))
  cat("```{=html}\n")
cat(glue::glue(
  '<div style="display:grid; margin-top: 3rem;"><figure>
    <img src="{id}.jpeg"
         alt="{alt}" width="{width}"/> <figcaption>
            <p>Picture by <a href="{info$url}">{info$photographer} on Pexels</a>.</p>
        </figcaption>
</figure></div>'
))
cat("\n```\n")
}
```
- Why use renv?
- How to use it?

:link: <https://maelle.github.io/renv-demo>

```{r board}
#| results: "asis"
#| cache: true
#| echo: false
get_pic(id = 7718755, alt = "To do list on a clipboard", 300)
```

## Your project depends on 

...its dependencies. To state the obvious :sweat_smile: Let's concentrate on software dependencies.

. . .

... its dependencies, wherever they come from. CRAN, R-universe, GitHub.

. . .

... its dependencies as they are now. R packages evolve over time.

## Future users of your code

including yourself :wink: should be able to easily use the same packages and their same versions to re-run your code.


```{r wish}
#| results: "asis"
#| cache: true
#| echo: false
get_pic(id = 5723951, alt = "Letter to Santa", 220)
```

## Ever used `sessionInfo()` to list dependencies?

```{r}
sessionInfo()

```

. . .

This can't be used directly.

## Ever used `sessionInfo()` to list dependencies?

. . .

You were on the right track.

. . .

renv by Kevin Ushey is a better way to do that, with :sparkles: little overhead :sparkles:

```{r cogwheels}
#| results: "asis"
#| cache: true
#| echo: false
get_pic(id = 3785927, alt = "Golden cogwheels on dark background", 360)
```

## First step: install renv!

Once per computer / per R update.

```r
install.packages("renv")
```

```{r room}
#| results: "asis"
#| cache: true
#| echo: false
get_pic(id = 5691495, alt = "Renovation in an empty light room with wooden laminates", 500)
```

## The renv workflow in each project

* Start with `renv::init()`.

* Install packages with `renv::install("ggplot2")`.

* Write code as usual.

* Regularly, `renv::snapshot()` (`renv::status()`).

## The renv workflow, when adopting a project

`renv::restore()`

```{r restore}
#| results: "asis"
#| cache: true
#| echo: false
get_pic(id = 4792494, alt = "Set of instruments on floor", 500)
```

## Demo

* The [coolcool](https://github.com/maelle/coolcool) package has two versions on GitHub, with different functions.

* My [project1](https://github.com/maelle/project1) uses the first version.

* My [project2](https://github.com/maelle/project2) uses the second version.

## In project1...

* I can run `coolcool::my_favorite_function()`.

* I canNOT run `coolcool::my_best_function()`.

```{r one}
#| results: "asis"
#| cache: true
#| echo: false
get_pic(id = 2249528, alt = "Gold one on blue background", 200)
```

## In project2...

* I canNOT run `coolcool::my_favorite_function()`.

* I can run `coolcool::my_best_function()`.


```{r two}
#| results: "asis"
#| cache: true
#| echo: false
get_pic(id = 1061141, alt = "Steel chain two on orange background", 200)
```

. . .

Why is it so?

## Anatomy of a project using renv

```{r, echo=TRUE}
fs::dir_ls("../project1", all = TRUE)
fs::dir_ls("../project1/renv", all = TRUE)
```

## The `renv.lock` file in project1

```{r, results='asis'}
cat("\n```yaml")
cat(
  glue::glue_collapse(
    brio::read_lines(file.path("../project1", "renv.lock")),
    sep = "\n"
  )
)
cat("\n```\n")
```

## The `renv.lock` file in project2

```{r, results='asis'}
cat("\n```yaml")
cat(
  glue::glue_collapse(
    brio::read_lines(file.path("../project2", "renv.lock")),
    sep = "\n"
  )
)
cat("\n```\n")
```

## The difference

```yaml
"Version": "1.0.0"
```

vs

```yaml
"Version": "2.0.0"
```

. . . 

How do we get there?

## project0

::: {.incremental}

* `usethis::create_project("../project0")`

* `renv::init()` then :eyes: look :eyes:

* `renv::install("maelle/coolcool")`

* Create `r/blop.R`, write `coolcool::my_best_function()`

* `renv::status()`

* `renv::snapshot()` then :eyes: look :eyes:

* `renv::install("usethis")`; `usethis::use_git()`; `usethis::use_github()`

:::

## project0 from GitHub

::: {.incremental}

* Close project. In another folder `create_from_github("maelle/project0")`

* :eyes: look :eyes:

* `coolcool::my_best_function()` :sob:

* `renv::restore()`

* :eyes: look :eyes:

* `coolcool::my_best_function()` :grin:

:::

## Zoom on `renv::install()`

Will it take ages to re-install packages in each project? :scream:

```{r wait}
#| results: "asis"
#| cache: true
#| echo: false
get_pic(id = 11747091, alt = "Close-up of a green alarm clock", 200)
```

. . .

No! renv creates a central cache from which it can pick packages quickly.

. . .

The first installation might take time, the second no because it uses the cache.

## What if I like `sessionInfo()`?

* You can still report it.

* See also [`report::report(sessionInfo())`](https://github.com/easystats/report#report-system-and-packages), and `renv::dependencies()`

```{r}
renv::dependencies()
```

## RStudio IDE or not

renv works without RStudio IDE too!

It is well supported in RStudio IDE, for instance when creating a new project from the menu.

```{r studio}
#| results: "asis"
#| cache: true
#| echo: false
get_pic(id = 3784424, alt = "Black and brown audio mixer", 400)
```

## Summary

Once per computer: `install.packages("renv")`.

In each project:

- `renv::init()` once, 
- `renv::install()` as often as needed, 
- `renv::snapshot()` regularly.

When adopting a project: `renv::restore()`.

:link: <https://maelle.github.io/renv-demo>

## Further resources on renv itself

+ [renv website](https://rstudio.github.io/renv/);
+ [What's Missing from renv](https://kevinushey-2020-rstudio-conf.netlify.app/slides.html#139);
+ ["You should be using renv", talk by E. David Aja ](https://www.rstudio.com/conference/2022/talks/you-should-use-renv/);
+ (in French) ["Package renv : présentation et retour d’expérience" by Elise Maigné](https://r-toulouse.netlify.app/evenements/2021-05-28-diaporama-et-vid%C3%A9o-de-la-rencontre-de-mai-2021/).

```{r sprout}
#| results: "asis"
#| cache: true
#| echo: false
get_pic(id = 1002703, alt = "Close-up photo of sprout", 200)
```

## Further, further resources

+ [capsule by Miles McBain](https://github.com/MilesMcBain/capsule), An inversion of renv for low effort reproducible R package libraries;

+ [Docker, blog post by Colin Fay](https://colinfay.me/docker-r-reproducibility/).

```{r carton}
#| results: "asis"
#| cache: true
#| echo: false
get_pic(id = 6831673, alt = "Carton box tied with ribbon and flowers", 400)
```
